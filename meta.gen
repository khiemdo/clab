
// Type allocators
inline void* alloc_Player() { return CALLOC(Player, 1); }
inline void* alloc_TestStruct() { return CALLOC(TestStruct, 1); }

// Function callers
inline void call_proc0(void* ret, ...) { proc0(); }
inline void call_sum(void* ret, ...)
{
	va_begin(ret);
	int x = va_arg(args, int);
	int y = va_arg(args, int);
	*(int*)ret = sum(x, y);
	va_end(args);
}
inline void call_proc1(void* ret, ...)
{
	va_begin(ret);
	int* ptr0 = va_arg(args, int*);
	float** ptr1 = va_arg(args, float**);
	double* ptr2 = va_arg(args, double*);
	proc1(ptr0, ptr1, ptr2);
	va_end(args);
}

// Type-id bindings
inline u32 TypeId(Player* ptr) { return 1; }
inline u32 TypeId(TestStruct* ptr) { return 2; }

// Global variables [g|s]etters
inline void* get_result(void* Target) { return &result; }
inline void set_result(void* Target, void* Value) { result = *(int*)Value; }

// Instance Fields [g|s]etters
inline void* get_Player_health(void* Target) { return &((Player*)Target)->health; }
inline void set_Player_health(void* Target, void* Value) { ((Player*)Target)->health = *(float*)Value; }
inline void* get_Player_speed(void* Target) { return &((Player*)Target)->speed; }
inline void set_Player_speed(void* Target, void* Value) { ((Player*)Target)->speed = *(float*)Value; }
inline void* get_Player_mesh(void* Target) { return &((Player*)Target)->mesh; }
inline void set_Player_mesh(void* Target, void* Value) { ((Player*)Target)->mesh = (Verticies*)Value; }
inline void* get_Player_model(void* Target) { return &((Player*)Target)->model; }
inline void set_Player_model(void* Target, void* Value) { ((Player*)Target)->model = (Verticies*)Value; }
inline void* get_Player_inventory(void* Target) { return &((Player*)Target)->inventory; }
inline void set_Player_inventory(void* Target, void* Value) { ((Player*)Target)->inventory = (Inventory*)Value; }
inline void* get_TestStruct_message(void* Target) { return &((TestStruct*)Target)->message; }
inline void set_TestStruct_message(void* Target, void* Value) { ((TestStruct*)Target)->message = *(string*)Value; }

// Meta-data initialization
void meta_init()
{
	MetaTypes.Names[1] = "Player";
	MetaTypes.Fields[1].Types[0] = "float";
	MetaTypes.Fields[1].Names[0] = "health";
	MetaTypes.Fields[1].Getters[0] = get_Player_health;
	MetaTypes.Fields[1].Setters[0] = set_Player_health;
	MetaTypes.Fields[1].Types[0] = "float";
	MetaTypes.Fields[1].Names[0] = "speed";
	MetaTypes.Fields[1].Getters[0] = get_Player_speed;
	MetaTypes.Fields[1].Setters[0] = set_Player_speed;
	MetaTypes.Fields[1].Types[0] = "Verticies*";
	MetaTypes.Fields[1].Names[0] = "mesh";
	MetaTypes.Fields[1].Getters[0] = get_Player_mesh;
	MetaTypes.Fields[1].Setters[0] = set_Player_mesh;
	MetaTypes.Fields[1].Types[1] = "Verticies*";
	MetaTypes.Fields[1].Names[1] = "model";
	MetaTypes.Fields[1].Getters[1] = get_Player_model;
	MetaTypes.Fields[1].Setters[1] = set_Player_model;
	MetaTypes.Fields[1].Types[0] = "Inventory*";
	MetaTypes.Fields[1].Names[0] = "inventory";
	MetaTypes.Fields[1].Getters[0] = get_Player_inventory;
	MetaTypes.Fields[1].Setters[0] = set_Player_inventory;
	MetaTypes.Fields[1].Count = 5;
	MetaTypes.Allocs[1] = alloc_Player;
	MetaTypes.Fields[0].Types[0] = "int";
	MetaTypes.Fields[0].Names[0] = "result";
	MetaTypes.Fields[0].Getters[0] = get_result;
	MetaTypes.Fields[0].Setters[0] = set_result;
	MetaTypes.Names[2] = "TestStruct";
	MetaTypes.Fields[2].Types[0] = "string";
	MetaTypes.Fields[2].Names[0] = "message";
	MetaTypes.Fields[2].Getters[0] = get_TestStruct_message;
	MetaTypes.Fields[2].Setters[0] = set_TestStruct_message;
	MetaTypes.Fields[2].Notes[0].Count = 2;
	MetaTypes.Fields[2].Notes[0].Names[0] = "helpbox";
	MetaTypes.Fields[2].Notes[0].Params[0].Add("text", "meta message...");
	MetaTypes.Fields[2].Notes[0].Params[0].Add("comment", true);
	MetaTypes.Fields[2].Notes[0].Names[1] = "popup";
	MetaTypes.Fields[2].Notes[0].Params[1].Add("from", "getvalues");
	MetaTypes.Fields[2].Notes[0].Params[1].Add("value", 3.14f);
	MetaTypes.Fields[2].Count = 1;
	MetaTypes.Allocs[2] = alloc_TestStruct;
	MetaTypes.Notes[2].Count = 1;
	MetaTypes.Notes[2].Names[0] = "serializable";
	MetaTypes.Notes[2].Params[0].Add("custom", true);
	MetaTypes.Names[0] = "_GLOBAL_";
	MetaTypes.Fields[0].Count = 1;
	MetaTypes.Count = 3;

	MetaFuncs.Types[0] = "void";
	MetaFuncs.Names[0] = "proc0";
	MetaFuncs.Params[0].Count = 0;
	MetaFuncs.Calls[0] = call_proc0;
	MetaFuncs.Types[1] = "int";
	MetaFuncs.Names[1] = "sum";
	MetaFuncs.Params[1].Types[2] = "int";
	MetaFuncs.Params[1].Names[2] = "x";
	MetaFuncs.Params[1].Types[2] = "int";
	MetaFuncs.Params[1].Names[2] = "y";
	MetaFuncs.Calls[1] = call_sum;
	MetaFuncs.Params[1].Count = 2;
	MetaFuncs.Types[2] = "void";
	MetaFuncs.Names[2] = "proc1";
	MetaFuncs.Params[2].Types[3] = "int*";
	MetaFuncs.Params[2].Names[3] = "ptr0";
	MetaFuncs.Params[2].Types[3] = "float**";
	MetaFuncs.Params[2].Names[3] = "ptr1";
	MetaFuncs.Params[2].Types[3] = "double*";
	MetaFuncs.Params[2].Names[3] = "ptr2";
	MetaFuncs.Calls[2] = call_proc1;
	MetaFuncs.Params[2].Count = 3;
	MetaFuncs.Count = 3;

}
#undef META_INIT
#define META_INIT() meta_init()
